/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const TableLazyImport = createFileRoute('/table')()
const FormLazyImport = createFileRoute('/form')()
const AboutLazyImport = createFileRoute('/about')()
const R404LazyImport = createFileRoute('/404')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TableLazyRoute = TableLazyImport.update({
  path: '/table',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/table.lazy').then((d) => d.Route))

const FormLazyRoute = FormLazyImport.update({
  path: '/form',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/form.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const R404LazyRoute = R404LazyImport.update({
  path: '/404',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/404.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404LazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormLazyImport
      parentRoute: typeof rootRoute
    }
    '/table': {
      id: '/table'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  R404LazyRoute,
  AboutLazyRoute,
  FormLazyRoute,
  TableLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/404",
        "/about",
        "/form",
        "/table"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/404": {
      "filePath": "404.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/form": {
      "filePath": "form.lazy.tsx"
    },
    "/table": {
      "filePath": "table.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
